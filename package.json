{
	"name": "ecsstractor-port",
	"displayName": "eCSStractor for VSCode",
	"description": "VSCode plugin for extracting class names from HTML and generate CSS stylesheet for following work.",
	"version": "0.1.0",
	"icon": "images/icon.png",
	"homepage": "https://github.com/yurasovm/eCSStractor-for-VSCode",
	"repository": {
		"type": "git",
		"url": "https://github.com/yurasovm/eCSStractor-for-VSCode"
	},
	"keywords": [
		"ecsstractor"
	],
	"publisher": "diz",
	"engines": {
		"vscode": "^1.5.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:ecsstractor-port.run",
		"onCommand:ecsstractor-port.runwithbem",
		"onCommand:ecsstractor-port.runwithbemandcomments",
		"onCommand:ecsstractor-port.runwithoutbem"
	],
	"main": "./extension",
	"contributes": {
		"menus": {
			"editor/context": [
				{
					"command": "ecsstractor-port.run",
					"title": "Run",
					"group": "eCSStractor@1"
				}
			]
		},
		"commands": [
			{
				"command": "ecsstractor-port.run",
				"title": "eCSStractor Run"
			},
			{
				"command": "ecsstractor-port.runwithbem",
				"title": "eCSStractor Run (With BEM Nesting)"
			},
			{
				"command": "ecsstractor-port.runwithbemandcomments",
				"title": "eCSStractor Run (With BEM Nesting and comments)"
			},
			{
				"command": "ecsstractor-port.runwithoutbem",
				"title": "eCSStractor Run (Without BEM Nesting)"
			}
		],
		"configuration": {
			"type": "object",
			"title": "eCSSTractor for VSCode",
			"properties": {
				"ecsstractor-port.brackets": {
					"type": "boolean",
					"default": true,
					"description": "Add brackets. Useful for Sass syntax and Stylus"
				},
				"ecsstractor-port.bracketsNewLineAfter": {
					"type": "boolean",
					"default": true,
					"description": "Add new line after open bracket"
				},
				"ecsstractor-port.emptyLineBeforeSelector": {
					"type": "boolean",
					"default": true,
					"description": "Empty line before selector"
				},
				"ecsstractor-port.destination": {
					"type": "string",
					"enum": [
						"tab",
						"clipboard"
					],
					"default": "clipboard",
					"description": "Where to put result"
				},
				"ecsstractor-port.attributes": {
					"type": "string",
					"enum": [
						"class",
						"className",
						"classAndClassName"
					],
					"markdownEnumDescriptions": [
						"only `class` attribute",
						"only `className` attribute",
						"both `class` & `className` attributes"
					],
					"default": "class",
					"markdownDescription": "Attribute name `class` or `className` for jsx"
				},
				"ecsstractor-port.ignore": {
					"type": "array",
					"default": [],
					"items": {
						"type": "string"
					},
					"markdownDescription": "List of classnames to ignore. Useful for helper classes, that probably already described. Ex., `clearfix`"
				},
				"ecsstractor-port.ignoreRegex": {
					"type": "array",
					"default": [],
					"items": {
						"type": "string"
					},
					"markdownDescription": "Similar to ignore option, but use RegEx to ignore. Ex., `^js-` will ingore all classes started with js-"
				},
				"ecsstractor-port.indentation": {
					"type": "string",
					"default": "\t",
					"description": "Indent symbol"
				},
				"ecsstractor-port.commentStyle": {
					"type": "string",
					"enum": [
						"css",
						"scss"
					],
					"default": "scss",
					"markdownDescription": "Comment style. Either CSS `/* comment text */` or SCSS `// comment text`"
				},
				"ecsstractor-port.bemNesting.enable": {
					"type": "boolean",
					"default": false,
					"description": "BEM Nesting. Generate nested stylesheet for preprocessors"
				},
				"ecsstractor-port.bemNesting.addComment": {
					"type": "boolean",
					"default": true,
					"description": "Add comments to nested stylesheets for preprocessors"
				},
				"ecsstractor-port.bemNesting.parentSymbol": {
					"type": "string",
					"default": "&",
					"markdownDescription": "Parent symbol. Ex.: `&__element {}`"
				},
				"ecsstractor-port.bemNesting.elementSeparator": {
					"type": "string",
					"default": "__",
					"description": "Separator between block and element names"
				},
				"ecsstractor-port.bemNesting.modifierSeparator": {
					"type": "string",
					"default": "--",
					"description": "Separator between block or element and they modifier"
				}
			}
		}
	},
	"scripts": {
		"install-extension": "code --install-extension ecsstractor-port-0.1.0.vsix",
		"build": "vsce package",
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"devDependencies": {
		"@types/mocha": "^2.2.32",
		"@types/node": "^6.14.13",
		"eslint": "^3.6.0",
		"mocha": "^2.3.3",
		"typescript": "^2.0.3",
		"vsce": "^1.93.0",
		"vscode": "^1.1.37"
	},
	"dependencies": {
		"htmlparser2": "^3.10.1"
	}
}
